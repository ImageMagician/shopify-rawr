{% assign debug = false %}

{% render 'shogun-products', content: product %}
{{product.metafields.shogun.above}}

<div class="container my-5">
  <div class="row gx-5">
    <div class="col-lg-7">
        <!-- START MAGICZOOMPLUS IMAGES -->{% render 'magiczoomplus' %}<!-- END MAGICZOOMPLUS IMAGES -->
    </div>
    <div class="col-lg-5">
        <h1>{{ product.title }}</h1>
        <span class="stamped-product-reviews-badge stamped-main-badge" 
          data-id="{{product.id}}" 
          data-product-title="{{product.title}}" 
          data-product-type="{{product.type}}" 
          style="display: block;"></span>
            
        <div class="mb-3">
            {% unless product.metafields.lionenergy.tagline == blank %}
                <h5>{{ product.metafields.lionenergy.tagline }}</h5>
            {% endunless %}
        </div>
        <div class="mb-0">
            <div class="float-end">
                <a href="#info" id="reviewClick">
                    <span class="stamped-product-reviews-badge stamped-main-badge float-right" data-id="{{ product.id }}" data-product-sku="{{ product.handle }}" data-product-type="{{product.type}}" data-product-title="{{product.title}}" style="display: inline-block;">{{ product.metafields.stamped.badge }}</span>
                </a>
            </div>
            <div>
                {% render 'product-price', product: product, use_variant: true %}
            </div>
        </div>
            
        <!--  Quick Bar -->
        {% render 'theme-product-quickbar', meta:product.metafields.lionenergy %}
        <!--  END:  Quick Bar -->
            
        <div class="row">
            <div class="col-12">
                {{ product.description }}
            </div>
        </div>
        <div class="row">
            <div class="col-12">
                
            </div>
        </div>
        <!--   START:  ADD TO CART FORM   -->
        {% form 'product', product %}
          
            {% if product.has_only_default_variant %}
                {% for variant in product.variants %}
                    <input type="hidden" id="product-select" name="id" value="{{ variant.id }}">
                {% endfor%}
            {% else %}
              {%- comment %}
                {% for variant in product.variants %}
                    <a class="btn {% if product.selected_or_first_available_variant.id == variant.id %}btn-outline-warning{% else %}btn-outline-dark{% endif %} m-2" id="variant-option-{{ variant.id }}" name="variant-{{ variant.id }}" href="{{ variant.url }}" role="button"> {{ variant.title }} </a>
                {% endfor%}
              {%- endcomment %}
                <variant-radios class="no-js-hidden" data-section="{{ section.id }}" data-url="{{ product.url }}" {{ block.shopify_attributes }}>
                  {%- for option in product.options_with_values -%}
                      <fieldset class="js product-form__input">
                        <legend class="form__label">{{ option.name }}</legend>
                        {%- for value in option.values -%}
                          <input type="radio" id="{{ section.id }}-{{ option.position }}-{{ forloop.index0 }}"
                                name="{{ option.name }}"
                                value="{{ value | escape }}"
                                form="{{ product_form_id }}"
                                {% if option.selected_value == value %}checked{% endif %}
                          >
                          <label for="{{ section.id }}-{{ option.position }}-{{ forloop.index0 }}">
                            {{ value }}
                          </label>
                        {%- endfor -%}
                      </fieldset>
                  {%- endfor -%}
                  <script id="product_variants" type="application/json">
                    {{ product.variants | json }}
                  </script>
                </variant-radios>
            {% endif %}
          
            <input type="hidden" id="product-select" name="id" value="{{ product.selected_or_first_available_variant.id }}">
            <input type="hidden" name="quantity" min="1" value="1">
            
            <div class="d-grid gap-2 col-12 my-3 mx-auto">
                {% if product.available %}
                    <button type="submit" class="btn btn-lg btn-warning"><i class="bi bi-cart2"></i>  Add to Cart</button>
                {% else %}
                    <button type="button" class="btn btn-secondary btn-lg" disabled>Out of Stock</button>
                {% endif %}
            </div>
          
        {% endform %}
  
        <!-- END OF CART -->

    </div>
</div>
</div>

<div id="info"></div>


{{product.metafields.shogun.below}}

<script>
    /*
     *  Variant pricing switch
     */
  
    // get the contents of the 'project_variants' jsonlist and parse for javascript
    const data = document.getElementById('product_variants').innerHTML;
    const parse = JSON.parse(data);
    
    //unique is the storage for each unique radio button name
    let unique = [];
    
    // go through all radio buttons 
    const radios = document.querySelectorAll('input[type="radio"]');
    console.log(radios.length);

    for ( let i = 0; i < radios.length; i++ ) {
        // add event listener by 'change'
        radios[i].addEventListener('change', radioChecked);
      
        // get all unique radio group names
        if ( !i || radios[i-1].getAttribute('name') != radios[i].getAttribute('name')) {
            unique.push(radios[i].getAttribute('name'));
        }
    }
   
    // run when a radio button is selected
    function radioChecked() {
      
        // variant will hold all the selected radio button items from each unique group
        let variant = [];
        
        // cycle through each radio button group and get the selected item's value
        for ( let i = 0; i < unique.length; i++ ) {
          // get the unique group of buttons
            const unique_group = document.querySelectorAll('input[name="' + unique[i] + '"]');
            for ( let j = 0; j < unique_group.length; j++ ) {
              console.log('unique group: ' + unique_group[j].value);
                if ( unique_group[j].checked ) {
                  console.log( variant[i] + ' : ' + unique_group[j].value);
                    variant[unique[i]] = unique_group[j].value;
                }
            }
        }
        
        // check each variant from the json list and see which one matches all the radio button values
        for ( i = 0; i<parse.length; i++ ) {
            if (variant[unique[0]] == parse[i].option1 && variant[unique[1]] == parse[i].option2 && variant[unique[2]] == parse[i].option3) {
              
                // change the hidden input for the 'product-select' id
                document.getElementById('product-select').value= parse[i].id;
              
                // change the URL to include variant param
                const pushThis = '?variant=' + parse[i].id;
                window.history.pushState('','', pushThis);
              
                break;
            }
        }
    }
</script>


<script>
/*
* Discount code display
*/

const uri = window.location.href;
const urlParams = new URLSearchParams(uri);
let dc = '';
let dc_price = {{ product.price | divided_by: 100 | decimals: 2 }};
let dc_comma = '';

function getCookie(cname) {
let dc;
let name = cname + "=";
let decodedCookie = decodeURIComponent(document.cookie);
let ca = decodedCookie.split(';');
for(let i = 0; i < ca.length; i++) {
  let c = ca[i];
  while (c.charAt(0) == ' ') {
    c = c.substring(1);
  }
  if (c.indexOf(name) == 0) {
    dc = c.substring(name.length, c.length);
  }
}
return dc;
}

dc = getCookie('discount_code');

const price_reg = "{{ product.price | money }}";
const prod_id = document.getElementById('product-select').value;
const prod_display = document.getElementById('product_price_display');
prime15id = [ 29484632113254,
           31936601391206,
           33018143809,
           39469714538598,
           39641683787878 ];

prime10id = [ 30985505177702,
           39469709525094,
           39437026164838,
           39437026459750,
           32206510194790,
           31605179351142
          ];

if ( dc != '' && dc != null && dc != undefined ) {
if ( dc == '10lionenergy' ) {
  dc_price = {{ product.price | times: 0.90 | divided_by: 100 | decimals: 2 }};
} else if ( dc == 'prime10') {
  for ( let p10 = 0; p10<prime10id.length; p10++ ) {
    if ( prod_id == prime10id[p10] ) {
      dc_price = {{ product.price | times: 0.90 | divided_by: 100 | decimals: 2 }};
      break;
    } else {
        dc_price = {{ product.price | divided_by: 100 }};
    }
  }
} else if ( dc == 'prime20solar' ) {
  if ( prod_id == '15559657685094' ) {
    dc_price = {{ product.price | times: 0.50 | divided_by: 100 | decimals: 2 }};
  } else {
    dc_price = {{ product.price | divided_by: 100 }};
  }
}
else
  if ( dc == 'prime15' ) {
  for ( let p15 = 0; p15<prime15id.length; p15++ ) {
    if ( prod_id == prime15id[p15] ) {
      dc_price = {{ product.price | times: 0.85 | divided_by: 100 | decimals: 2 }};
      break;
    }
    else {
      dc_price = {{ product.price | divided_by: 100 | decimals: 2 }}
    }
  }
} 

else {
  dc_price = {{ product.price | times: 0.85 | divided_by: 100 | decimals: 2 }};
}

if ( dc_price !== {{ product.price | divided_by: 100  }} ) {
  dc_comma = '$' + dc_price.toLocaleString("en-US", {minimumFractionDigits: 2} );
  prod_display.innerHTML = '<span style="text-decoration:line-through; color: #999">' + price_reg + '</span> <strong>' + dc_comma + '</strong>';
}
}
  
console.log(dc_price);
document.write('<span itemscope itemtype="http://schema.org/Product" class="microdata">');
document.write('<meta itemprop="image" content="{{ product.featured_image }}">');
document.write('<meta itemprop="name" content="{{ product.title }}">');
document.write('<span itemprop="offers" itemscope itemtype="http://schema.org/Offer">');
  document.write('<meta id="meta_price" itemprop="price" content="' + dc_price + '">');
  document.write('<meta itemprop="priceCurrency" content="USD">');
document.write('</span>');
document.write('</span>');
</script>

<style>
  .shopify-product-form fieldset input[type="radio"] {
    height:0;
    width:0;
  }
  .shopify-product-form fieldset label {
      border: 1px solid #313438;
      padding: 8px 16px;
      margin: 0 8px 8px 0;
      border-radius: 5px;
      font-size: .875em;
    cursor:pointer;
  }
  
  .shopify-product-form fieldset label:hover {
    background:#f0f1f4;
  }

  .shopify-product-form fieldset label.selected {
    background:rgb(255,207,81);
  }
</style>

<!--Start Stamped.io Auto Installation--><div id="stamped-main-widget" class="stamped-main-widget" data-widget-style="standard" data-product-id="{{ product.id }}" data-name="{{ product.title | escape }}" data-url="{{ shop.url }}{{ product.url }}" data-image-url="{{ product.featured_image | product_img_url: "large" |replace: '?', '%3F' | replace: '&','%26'}}" data-description="{{ product.description | escape }}" data-product-sku="{{product.handle}}" data-product-type="{{product.type}}" data-widget-language="{{shop.locale}}">{{ product.metafields.stamped.reviews }}</div><!--End Stamped.io Auto Installation-->